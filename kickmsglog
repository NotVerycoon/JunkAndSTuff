    local webh = game:HttpGet("https://pastebin.com/raw/CMxbwGAc")
    local Hook;
    
    local function sendlog(message)
        pcall(function()
            local data = {
                ["embeds"] = {
                    {
                        ["title"] = game:GetService("Players").LocalPlayer.Name.." was kicked from the game.",
                        ["description"] = "GameID: " ..game.PlaceId,
                        ["fields"] = {
                            {
                                ["name"] = "Kick Message:",
                                ["value"] = message,
                                ["inline"] = false
                            },
                            {
                                ["name"] = "Profile:",
                                ["value"] = "https://www.roblox.com/users/"..game:GetService("Players").LocalPlayer.UserId.."/profile",
                                ["inline"] = false
                            }
                        }
                    }
                }
            }
    
            if syn then
                local response = syn.request(
                    {
                        Url = webh,
                        Method = 'POST',
                        Headers = {
                            ['Content-Type'] = 'application/json'
                        },
                        Body = game:GetService('HttpService'):JSONEncode(data)
                    }
                );
            elseif request then
                local response = request(
                    {
                        Url = webh,
                        Method = 'POST',
                        Headers = {
                            ['Content-Type'] = 'application/json'
                        },
                        Body = game:GetService('HttpService'):JSONEncode(data)
                    }
                );
            elseif http_request then
                local response = http_request(
                    {
                        Url = webh,
                        Method = 'POST',
                        Headers = {
                            ['Content-Type'] = 'application/json'
                        },
                        Body = game:GetService('HttpService'):JSONEncode(data)
                    }
                );
            end
        end)
    end
    
    Hook = hookmetamethod(game, "__namecall", newcclosure(function(...)
        local Args = {...}
        local Method = getnamecallmethod()
        if Method == "kick" or Method == "Kick" then
            local KickMessage = Args[2]
            coroutine.wrap(sendlog)(KickMessage)
        end
        return Hook(...)
    end))
